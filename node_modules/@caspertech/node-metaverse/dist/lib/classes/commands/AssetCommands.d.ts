/// <reference types="node" />
import { CommandsBase } from './CommandsBase';
import { UUID } from '../UUID';
import { TransferChannelType } from '../../enums/TransferChannelType';
import { TransferSourceType } from '../../enums/TransferSourceTypes';
import { AssetType } from '../../enums/AssetType';
import { Material } from '../public/Material';
import { HTTPAssets } from '../../enums/HTTPAssets';
import { InventoryFolder } from '../InventoryFolder';
import { InventoryItem } from '../InventoryItem';
export declare class AssetCommands extends CommandsBase {
    downloadAsset(type: HTTPAssets, uuid: UUID | string): Promise<Buffer>;
    copyInventoryFromNotecard(notecardID: UUID, folder: InventoryFolder, itemID: UUID, objectID?: UUID): Promise<InventoryItem>;
    transfer(channelType: TransferChannelType, sourceType: TransferSourceType, priority: boolean, transferParams: Buffer, outAssetID?: {
        assetID: UUID;
    }): Promise<Buffer>;
    downloadInventoryAsset(itemID: UUID, ownerID: UUID, type: AssetType, priority: boolean, objectID?: UUID, assetID?: UUID, outAssetID?: {
        assetID: UUID;
    }, sourceType?: TransferSourceType, channelType?: TransferChannelType): Promise<Buffer>;
    private getMaterialsLimited;
    getMaterials(uuids: {
        [key: string]: Material | null;
    }): Promise<void>;
}
