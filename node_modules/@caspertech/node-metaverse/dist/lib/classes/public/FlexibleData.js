"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FlexibleData = void 0;
const Vector3_1 = require("../Vector3");
class FlexibleData {
    constructor(buf, pos, length) {
        this.Softness = 0;
        this.Tension = 0.0;
        this.Drag = 0.0;
        this.Gravity = 0.0;
        this.Wind = 0.0;
        this.Force = Vector3_1.Vector3.getZero();
        if (buf !== undefined && pos !== undefined && length !== undefined) {
            if (length >= 5) {
                this.Softness = ((buf.readUInt8(pos) & 0x80) >> 6) | ((buf.readUInt8(pos + 1) & 0x80) >> 7);
                this.Tension = (buf.readUInt8(pos++) & 0x7F) / 10.0;
                this.Drag = (buf.readUInt8(pos++) & 0x7F) / 10.0;
                this.Gravity = (buf.readUInt8(pos++) / 10.0) - 10.0;
                this.Wind = (buf.readUInt8(pos++) / 10.0);
                this.Force = new Vector3_1.Vector3(buf, pos);
            }
        }
    }
    writeToBuffer(buf, pos) {
        buf[pos] = (this.Softness & 2) << 6;
        buf[pos + 1] = (this.Softness & 1) << 7;
        buf[pos++] |= ((this.Tension * 10) & 0x7F);
        buf[pos++] |= ((this.Drag * 10) & 0x7F);
        buf[pos++] = (this.Gravity + 10.0) * 10.0;
        buf[pos++] = (this.Wind) * 10;
        this.Force.writeToBuffer(buf, pos, false);
    }
    getBuffer() {
        const buf = Buffer.allocUnsafe(16);
        this.writeToBuffer(buf, 0);
        return buf;
    }
}
exports.FlexibleData = FlexibleData;
//# sourceMappingURL=FlexibleData.js.map