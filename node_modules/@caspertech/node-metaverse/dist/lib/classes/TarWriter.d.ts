/// <reference types="node" />
/// <reference types="node" />
import { Readable, Transform } from 'stream';
export declare class TarWriter extends Transform {
    private thisFileSize;
    private fileActive;
    newFile(archivePath: string, realPath: string): Promise<void>;
    pipeFromBuffer(buf: Buffer): Promise<void>;
    pipeFrom(str: Readable): Promise<void>;
    private writeHeader;
    endFile(): Promise<void>;
    _transform(chunk: any, encoding: 'ascii' | 'utf-8' | 'utf16le' | 'ucs-2' | 'base64' | 'latin1' | 'binary' | 'hex', callback: (error?: Error, data?: any) => void): void;
    private chopString;
    private octalBuf;
    private octalString;
}
