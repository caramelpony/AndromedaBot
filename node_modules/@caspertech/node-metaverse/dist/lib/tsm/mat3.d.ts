/**
 * @fileoverview TSM - A TypeScript vector and matrix math library
 * @author Matthias Ferch
 * @version 0.6
 */
import { TSMVec2 } from './vec2';
import { TSMVec3 } from './vec3';
import { TSMMat4 } from './mat4';
import { TSMQuat } from './quat';
export declare class TSMMat3 {
    static identity: TSMMat3;
    private values;
    static product(m1: TSMMat3, m2: TSMMat3, result?: TSMMat3 | null): TSMMat3;
    constructor(values?: number[] | null);
    at(index: number): number;
    init(values: number[]): TSMMat3;
    reset(): void;
    copy(dest?: TSMMat3 | null): TSMMat3;
    all(): number[];
    row(index: number): number[];
    col(index: number): number[];
    equals(matrix: TSMMat3, threshold?: number): boolean;
    determinant(): number;
    setIdentity(): TSMMat3;
    transpose(): TSMMat3;
    inverse(): TSMMat3 | null;
    multiply(matrix: TSMMat3): TSMMat3;
    multiplyTSMVec2(vector: TSMVec2, result?: TSMVec2 | null): TSMVec2;
    multiplyTSMVec3(vector: TSMVec3, result?: TSMVec3 | null): TSMVec3;
    toTSMMat4(result?: TSMMat4 | null): TSMMat4;
    toQuat(): TSMQuat;
    rotate(angle: number, axis: TSMVec3): TSMMat3 | null;
}
