/**
 * @fileoverview TSM - A TypeScript vector and matrix math library
 * @author Matthias Ferch
 * @version 0.6
 */
import { TSMVec2 } from './vec2';
export declare class TSMMat2 {
    static identity: TSMMat2;
    private values;
    static product(m1: TSMMat2, m2: TSMMat2, result?: TSMMat2 | null): TSMMat2;
    constructor(values?: number[] | null);
    at(index: number): number;
    init(values: number[]): TSMMat2;
    reset(): void;
    copy(dest?: TSMMat2 | null): TSMMat2;
    all(): number[];
    row(index: number): number[];
    col(index: number): number[];
    equals(matrix: TSMMat2, threshold?: number): boolean;
    determinant(): number;
    setIdentity(): TSMMat2;
    transpose(): TSMMat2;
    inverse(): TSMMat2 | null;
    multiply(matrix: TSMMat2): TSMMat2;
    rotate(angle: number): TSMMat2;
    multiplyTSMVec2(vector: TSMVec2, result?: TSMVec2 | null): TSMVec2;
    scale(vector: TSMVec2): TSMMat2;
}
