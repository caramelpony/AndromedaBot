"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const ExampleBot_1 = require("../ExampleBot");
const ChatSourceType_1 = require("../../lib/enums/ChatSourceType");
const InstantMessageEventFlags_1 = require("../../lib/enums/InstantMessageEventFlags");
class InstantMessages extends ExampleBot_1.ExampleBot {
    constructor() {
        super();
    }
    onConnected() {
        return __awaiter(this, void 0, void 0, function* () {
            this.bot.clientEvents.onInstantMessage.subscribe(this.onInstantMessage.bind(this));
        });
    }
    onInstantMessage(event) {
        return __awaiter(this, void 0, void 0, function* () {
            if (event.source === ChatSourceType_1.ChatSourceType.Agent) {
                if (!(event.flags & InstantMessageEventFlags_1.InstantMessageEventFlags.startTyping || event.flags & InstantMessageEventFlags_1.InstantMessageEventFlags.finishTyping)) {
                    // typeInstantMessage will emulate a human-ish typing speed
                    yield this.bot.clientCommands.comms.typeInstantMessage(event.from, 'Thanks for the message! This account is a scripted agent (bot), so cannot reply to your query. Sorry!');
                    // sendInstantMessage will send it instantly
                    yield this.bot.clientCommands.comms.sendInstantMessage(event.from, 'Of course I still love you!');
                }
            }
        });
    }
}
new InstantMessages().run().then(() => {
}).catch((err) => {
    console.error(err);
});
//# sourceMappingURL=InstantMessages.js.map